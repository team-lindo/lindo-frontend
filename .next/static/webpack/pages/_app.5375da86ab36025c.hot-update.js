"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/post.js":
/*!**************************!*\
  !*** ./reducers/post.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPost: function() { return /* binding */ addPost; },\n/* harmony export */   initialState: function() { return /* binding */ initialState; }\n/* harmony export */ });\nconst initialState = {\n    mainPosts: [\n        {\n            id: 1,\n            User: {\n                id: 1,\n                nickname: \"설이\"\n            },\n            content: \"첫 번째 게시물이다냥 #츄르 #닭가슴살\",\n            Images: [\n                {\n                    src: \"/images/a.png\"\n                },\n                {\n                    src: \"/images/b.png\"\n                },\n                {\n                    src: \"/images/c.png\"\n                }\n            ],\n            Comments: [\n                {\n                    User: {\n                        nickname: \"까미\"\n                    },\n                    content: \"우와 신상 츄르야~!?\"\n                },\n                {\n                    User: {\n                        nickname: \"노랭이\"\n                    },\n                    content: \"나는 참치캔이 좋더라!^^\"\n                }\n            ]\n        }\n    ],\n    imagePaths: [],\n    postAdded: false\n};\n// 액션 이름\nconst ADD_POST = \"ADD_POST\";\nconst addPost = {\n    type: ADD_POST\n};\nconst dummyPost = {\n    User: {\n        id: 1,\n        nickname: \"설이\"\n    },\n    Images: [],\n    Comments: []\n};\nconst reducer = function() {\n    let state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialState, action = arguments.length > 1 ? arguments[1] : void 0;\n    switch(action.type){\n        case ADD_POST:\n            return {\n                ...state,\n                //dummyPost를 맨 앞에 둬야 게시물을 맨 위에 뜸\n                mainPosts: [\n                    dummyPost,\n                    ...state.mainPosts\n                ],\n                postAdded: true\n            };\n        default:\n            return state;\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (reducer); /*import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport { HYDRATE } from 'next-redux-wrapper';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  //mainPosts에 이니셜스테이트 데이터 넣고 나중에 실제로 바꿈\r\n  singlePost: null,\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  updatePostLoading: false,\r\n  updatePostDone: false,\r\n  updatePostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n};\r\n\r\nconst loadPostsThrottle = async (lastId) => {\r\n  const response = await axios.get(`/posts?lastId=${lastId || 0}`);\r\n  return response.data;\r\n};\r\nexport const loadPosts = createAsyncThunk('post/loadPosts', _.throttle(loadPostsThrottle, 5000));\r\n\r\nconst loadHashtagPostsThrottle = async ({ lastId, tag }) => {\r\n  const response = await axios.get(`/hashtag/${encodeURIComponent(tag)}?lastId=${lastId || 0}`);\r\n  return response.data;\r\n};\r\nexport const loadHashtagPosts = createAsyncThunk('post/loadHashtagPosts', _.throttle(loadHashtagPostsThrottle, 5000));\r\n\r\nconst loadUserPostsThrottle = async ({ lastId, id }) => {\r\n  const response = await axios.get(`/user/${id}/posts?lastId=${lastId || 0}`);\r\n  return response.data;\r\n};\r\nexport const loadUserPosts = createAsyncThunk('post/loadUserPosts', _.throttle(loadUserPostsThrottle, 5000));\r\n\r\nexport const retweet = createAsyncThunk('post/retweet', async (data) => {\r\n  const response = await axios.post(`/post/${data}/retweet`);\r\n  return response.data;\r\n});\r\n\r\nexport const uploadImage = createAsyncThunk('post/uploadImage', async (data) => {\r\n  const response = await axios.post('/post/images', data);\r\n  return response.data;\r\n});\r\n\r\nexport const likePost = createAsyncThunk('post/likePost', async (data) => {\r\n  const response = await axios.patch(`/post/${data}/like`);\r\n  return response.data;\r\n});\r\n\r\nexport const unlikePost = createAsyncThunk('post/unlikePost', async (data) => {\r\n  const response = await axios.delete(`/post/${data}/like`);\r\n  return response.data;\r\n});\r\n\r\nexport const loadPost = createAsyncThunk('post/loadPost', async (data) => {\r\n  const response = await axios.get(`/post/${data}`);\r\n  return response.data;\r\n});\r\n\r\nexport const addPost = createAsyncThunk('post/addPost', async (data) => {\r\n  const response = await axios.post('/post', data);\r\n  return response.data;\r\n});\r\n\r\nexport const updatePost = createAsyncThunk('post/updatePost', async (data) => {\r\n  const response = await axios.patch(`/post/${data.PostId}`, data);\r\n  return response.data;\r\n});\r\n\r\nexport const removePost = createAsyncThunk('post/removePost', async (data) => {\r\n  const response = await axios.delete(`/post/${data}`);\r\n  return response.data;\r\n});\r\n\r\nexport const addComment = createAsyncThunk('post/addComment', async (data) => {\r\n  const response = await axios.post(`/post/${data.postId}/comment`, data); //\r\n  return response.data;\r\n});\r\n\r\nconst postSlice = createSlice({\r\n  name: 'post',\r\n  initialState,\r\n  reducers: {\r\n    removeImage(state, action) {\r\n      state.imagePaths = state.imagePaths.filter((v, i) => i !== action.payload);\r\n    },\r\n  },\r\n  extraReducers: (builder) => builder\r\n    .addCase(HYDRATE, (state, action) => ({\r\n      ...state,\r\n      ...action.payload.post,\r\n    }))\r\n    .addCase(retweet.pending, (state, action) => {\r\n      state.retweetLoading = true;\r\n      state.retweetDone = false;\r\n      state.retweetError = null;\r\n    })\r\n    .addCase(retweet.fulfilled, (state, action) => {\r\n      state.retweetLoading = false;\r\n      state.retweetDone = true;\r\n      state.mainPosts.unshift(action.payload);\r\n    })\r\n    .addCase(retweet.rejected, (state, action) => {\r\n      state.retweetLoading = false;\r\n      state.retweetError = action.error;\r\n    })\r\n    .addCase(uploadImage.pending, (draft, action) => {\r\n      draft.uploadImagesLoading = true;\r\n      draft.uploadImagesDone = false;\r\n      draft.uploadImagesError = null;\r\n    })\r\n    .addCase(uploadImage.fulfilled, (draft, action) => {\r\n      draft.imagePaths = draft.imagePaths.concat(action.payload);\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesDone = true;\r\n    })\r\n    .addCase(uploadImage.rejected, (draft, action) => {\r\n      draft.uploadImagesLoading = false;\r\n      draft.uploadImagesError = action.error;\r\n    })\r\n    .addCase(likePost.pending, (draft, action) => {\r\n      draft.likePostLoading = true;\r\n      draft.likePostDone = false;\r\n      draft.likePostError = null;\r\n    })\r\n    .addCase(likePost.fulfilled, (draft, action) => {\r\n      const post = draft.mainPosts.find((v) => v.id === action.payload.PostId);\r\n      post.Likers.push({ id: action.payload.UserId });\r\n      draft.likePostLoading = false;\r\n      draft.likePostDone = true;\r\n    })\r\n    .addCase(likePost.rejected, (draft, action) => {\r\n      draft.likePostLoading = false;\r\n      draft.likePostError = action.error;\r\n    })\r\n    .addCase(unlikePost.pending, (draft, action) => {\r\n      draft.unlikePostLoading = true;\r\n      draft.unlikePostDone = false;\r\n      draft.unlikePostError = null;\r\n    })\r\n    .addCase(unlikePost.fulfilled, (draft, action) => {\r\n      const post = draft.mainPosts.find((v) => v.id === action.payload.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id !== action.payload.UserId);\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostDone = true;\r\n    })\r\n    .addCase(unlikePost.rejected, (draft, action) => {\r\n      draft.unlikePostLoading = false;\r\n      draft.unlikePostError = action.error;\r\n    })\r\n    .addCase(loadPost.pending, (draft, action) => {\r\n      draft.loadPostLoading = true;\r\n      draft.loadPostDone = false;\r\n      draft.loadPostError = null;\r\n    })\r\n    .addCase(loadPost.fulfilled, (draft, action) => {\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostDone = true;\r\n      draft.singlePost = action.payload;\r\n    })\r\n    .addCase(loadPost.rejected, (draft, action) => {\r\n      draft.loadPostLoading = false;\r\n      draft.loadPostError = action.error;\r\n    })\r\n    .addCase(loadPosts.pending, (state, action) => {\r\n      state.loadPostsLoading = true;\r\n      state.loadPostsDone = false;\r\n      state.loadPostsError = null;\r\n    })\r\n    .addCase(loadPosts.fulfilled, (state, action) => {\r\n      state.loadPostsLoading = false;\r\n      state.loadPostsDone = true;\r\n      state.mainPosts = state.mainPosts.concat(action.payload);\r\n      state.hasMorePosts = action.payload.length === 10;\r\n    })\r\n    .addCase(loadPosts.rejected, (state, action) => {\r\n      state.loadPostsLoading = false;\r\n      state.loadPostsError = action.error;\r\n    })\r\n    .addCase(loadUserPosts.pending, (state, action) => {\r\n      state.loadPostsLoading = true;\r\n      state.loadPostsDone = false;\r\n      state.loadPostsError = null;\r\n    })\r\n    .addCase(loadUserPosts.fulfilled, (state, action) => {\r\n      state.loadPostsLoading = false;\r\n      state.loadPostsDone = true;\r\n      state.mainPosts = state.mainPosts.concat(action.payload);\r\n      state.hasMorePosts = action.payload.length === 10;\r\n    })\r\n    .addCase(loadUserPosts.rejected, (state, action) => {\r\n      state.loadPostsLoading = false;\r\n      state.loadPostsError = action.error;\r\n    })\r\n    .addCase(loadHashtagPosts.pending, (state, action) => {\r\n      state.loadPostsLoading = true;\r\n      state.loadPostsDone = false;\r\n      state.loadPostsError = null;\r\n    })\r\n    .addCase(loadHashtagPosts.fulfilled, (state, action) => {\r\n      state.loadPostsLoading = false;\r\n      state.loadPostsDone = true;\r\n      state.mainPosts = state.mainPosts.concat(action.payload);\r\n      state.hasMorePosts = action.payload.length === 10;\r\n    })\r\n    .addCase(loadHashtagPosts.rejected, (state, action) => {\r\n      state.loadPostsLoading = false;\r\n      state.loadPostsError = action.error;\r\n    })\r\n    .addCase(addPost.pending, (draft, action) => {\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n    })\r\n    .addCase(addPost.fulfilled, (draft, action) => {\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.payload);\r\n      draft.imagePaths = [];\r\n    })\r\n    .addCase(addPost.rejected, (draft, action) => {\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n    })\r\n    .addCase(updatePost.pending, (draft, action) => {\r\n      draft.updatePostLoading = true;\r\n      draft.updatePostDone = false;\r\n      draft.updatePostError = null;\r\n    })\r\n    .addCase(updatePost.fulfilled, (draft, action) => {\r\n      draft.updatePostLoading = false;\r\n      draft.updatePostDone = true;\r\n      draft.mainPosts.find((v) => v.id === action.payload.PostId).content = action.payload.content;\r\n    })\r\n    .addCase(updatePost.rejected, (draft, action) => {\r\n      draft.updatePostLoading = false;\r\n      draft.updatePostError = action.error;\r\n    })\r\n    .addCase(removePost.pending, (draft, action) => {\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n    })\r\n    .addCase(removePost.fulfilled, (draft, action) => {\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.payload.PostId);\r\n    })\r\n    .addCase(removePost.rejected, (draft, action) => {\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n    })\r\n    .addCase(addComment.pending, (draft, action) => {\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n    })\r\n    .addCase(addComment.fulfilled, (draft, action) => {\r\n      const post = draft.mainPosts.find((v) => v.id === action.payload.PostId);\r\n      console.log('draft', draft, 'post', post, 'Comments', post.Coments);\r\n      post.Comments.unshift(action.payload);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n    })\r\n    .addCase(addComment.rejected, (draft, action) => {\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n    })\r\n    .addDefaultCase((state) => state),\r\n});\r\n\r\nexport default postSlice;*/ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/post.js\n"));

/***/ })

});